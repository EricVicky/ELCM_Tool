angular.module("ghiscoding.validation",["pascalprecht.translate"]).directive("validation",["$timeout","validationCommon",function(b,y){return{restrict:"A",require:"ngModel",link:function(f,x,e,q){function u(c){a.getFormElementByName(q.$name).isValidationCancelled?q.$setValidity("validation",!0):A(c.target.value,10)}function A(c,e){var h="undefined"!==typeof e?e:a.typingLimit,v=a.getFormElementByName(q.$name);a.validate(c,!1);if(!a.isFieldRequired()&&(""===c||null===c||"undefined"===typeof c))return B(),
c;v&&(v.isValidationCancelled=!1);(c||a.isFieldRequired())&&q.$setValidity("validation",!1);if((""===c||"undefined"===typeof c)&&"NUMBER"===x.prop("type").toUpperCase())return b.cancel(d),q.$setValidity("validation",a.validate(c,!0)),c;if("SELECT"===x.prop("tagName").toUpperCase())return q.$setValidity("validation",a.validate(c,!0)),c;"undefined"!==typeof c&&(a.updateErrorMsg(""),b.cancel(d),d=b(function(){f.$evalAsync(q.$setValidity("validation",a.validate(c,!0)))},h));return c}function D(){q.$formatters.shift();
q.$parsers.shift();B();a.removeFromValidationSummary(e.name)}function B(){var c=a.getFormElementByName(q.$name);c&&(c.isValidationCancelled=!0);b.cancel(d);a.updateErrorMsg("");q.$setValidity("validation",!0);"function"===typeof u&&x.unbind("blur",u)}function w(){q.$setValidity("validation",a.validate(q.$viewValue||"",!1));var c=a.getFormElementByName(q.$name);c&&(c.isValidationCancelled=!1);x.bind("blur",u)}var a=new y(f,x,e,q),d;f.$evalAsync(function(){q.$formatters.unshift(A);q.$parsers.unshift(A)});
e.$observe("disabled",function(c){c?(B(),a.removeFromValidationSummary(e.name)):w()});x.on("$destroy",function(){D()});f.$watch(function(){return x.attr("validation")},function(c){"undefined"===typeof c||""===c?D():(a.defineValidation(),w())});x.bind("blur",u)}}}]);angular.module("ghiscoding.validation").factory("validationCommon",["$rootScope","$translate","validationRules",function(b,y,f){function x(k){return B(r,"fieldName",k)}function e(k,a){var g={},m;for(m in k)g[m]=k[m];for(m in a)g[m]=a[m];return g}function q(k,a){var g=this;a&&a.obj&&(g=a.obj,g.validatorAttrs=a.obj.attrs);var m=a&&a.elm?a.elm:g.elm,c=m&&m.attr("name")?m.attr("name"):null;if("undefined"===typeof c||null===c)throw'Angular-Validation Service requires you to have a (name="") attribute on the element to validate... Your element is: ng-model="'+
(m?m.attr("ng-model"):"unknown")+'"';var d=a&&a.translate?y.instant(k):k,c=c.replace(/[|&;$%@"<>()+,\[\]\{\}]/g,""),b=null;g.validatorAttrs&&g.validatorAttrs.hasOwnProperty("validationErrorTo")&&(b=g.validatorAttrs.validationErrorTo.charAt(0),b=angular.element(document.querySelector("."===b||"#"===b?g.validatorAttrs.validationErrorTo:"#"+g.validatorAttrs.validationErrorTo)));b&&0!==b.length||(b=angular.element(document.querySelector(".validation-"+c)));var e=a&&a.isSubmitted?a.isSubmitted:!1;a&&!a.isValid&&
(e||g.ctrl.$dirty||g.ctrl.$touched)?0<b.length?b.html(d):m.after('<span class="validation validation-'+c+' text-danger">'+d+"</span>"):b.html("")}function u(k,c,g,m){var b=c.name?c.name:k.attr("name"),e=d(b,{scope:m}),h=c&&c.friendlyName?y.instant(c.friendlyName):"";c={fieldName:b,friendlyName:h,elm:k,attrs:c,ctrl:g,scope:m,isValid:!1,message:"",formName:e?e.$name:null};k=a(r,"fieldName",k.attr("name"));0<=k?r[k]=c:r.push(c);return r}function A(k,a,g,m,c){g=g.trim();D(a,g);a&&(a.message=g);if(k.validatorAttrs.preValidateFormElements||
n.preValidateFormElements)a&&"function"===typeof k.ctrl.$setTouched&&a.ctrl.$setTouched(),!1===k.ctrl.$dirty&&q(g,{isSubmitted:!0,isValid:m,obj:a});c&&a&&!a.isValid?k.updateErrorMsg(g,{isValid:m,obj:a}):a&&a.isValid&&D(a,"")}function D(k,c){if("undefined"!==typeof k&&null!=k){var g=k.ctrl&&k.ctrl.$name?k.ctrl.$name:k.attrs&&k.attrs.name?k.attrs.name:k.elm.attr("name"),m=d(g,k),b=a(t,"field",g);if(0<=b&&""===c)t.splice(b,1);else if(""!==c){var e=k.attrs&&k.friendlyName?y.instant(k.friendlyName):"",
g={field:g,friendlyName:e,message:c,formName:m?m.$name:null};0<=b?t[b]=g:t.push(g)}k.scope.$validationSummary=t;m&&(m.$validationSummary=w(t,"formName",m.$name));n&&n.controllerAs&&(n.controllerAs.$validationSummary=t,m&&(b=0<=m.$name.indexOf(".")?m.$name.split(".")[1]:m.$name,(n.controllerAs[b]?n.controllerAs[b]:k.elm.controller()[b]).$validationSummary=w(t,"formName",m.$name)));return t}}function B(k,a,g){if(k)for(var m=0;m<k.length;m++)if(k[m][a]===g)return k[m];return null}function w(k,a,g){var m=
[];if(k)for(var c=0;c<k.length;c++)k[c][a]===g&&m.push(k[c]);return m}function a(k,a,g){if(k)for(var c=0;c<k.length;c++)if(k[c][a]===g)return c;return-1}function d(k,a){for(var g=document.getElementsByName(k),c=null,b=0;b<g.length;b++){var d=g[b].form;if(d&&d.name){if(n&&n.controllerAs&&0<=d.name.indexOf("."))for(var c=a.scope,e=d.name.split("."),h=0,f=e.length;h<f;h++)c[e[h]]&&(c=c[e[h]]);else c=a.scope[d.name];if(c)return"undefined"===typeof c.$name&&(c.$name=d.name),c}}return d&&d.name?(g={$name:d.name,
specialNote:"Created by Angular-Validation for Isolated Scope usage"},n&&n.controllerAs&&0<=d.name.indexOf(".")?(d=d.name.split("."),a.scope[d[0]][d[1]]=g):a.scope[d.name]=g):null}function c(a){return!isNaN(parseFloat(a))&&isFinite(a)}function F(a,c){var g="",b="-",d=[],d=[],e=b=g="";switch(c.toUpperCase()){case "EURO_LONG":case "EURO-LONG":g=a.substring(0,10);b=a.substring(2,3);d=h(g,b);e=d[0];b=d[1];g=d[2];d=8<a.length?a.substring(9).split(":"):null;break;case "UK":case "EURO":case "EURO_SHORT":case "EURO-SHORT":case "EUROPE":g=
a.substring(0,8);b=a.substring(2,3);d=h(g,b);e=d[0];b=d[1];g=50>parseInt(d[2])?"20"+d[2]:"19"+d[2];d=8<a.length?a.substring(9).split(":"):null;break;case "US_LONG":case "US-LONG":g=a.substring(0,10);b=a.substring(2,3);d=h(g,b);b=d[0];e=d[1];g=d[2];d=8<a.length?a.substring(9).split(":"):null;break;case "US":case "US_SHORT":case "US-SHORT":g=a.substring(0,8);b=a.substring(2,3);d=h(g,b);b=d[0];e=d[1];g=50>parseInt(d[2])?"20"+d[2]:"19"+d[2];d=8<a.length?a.substring(9).split(":"):null;break;default:g=
a.substring(0,10),b=a.substring(4,5),d=h(g,b),g=d[0],b=d[1],e=d[2],d=10<a.length?a.substring(11).split(":"):null}return new Date(g,b-1,e,d&&3===d.length?d[0]:0,d&&3===d.length?d[1]:0,d&&3===d.length?d[2]:0)}function h(a,d){var g=[];switch(d){case "/":g=a.split("/");break;case ".":g=a.split(".");break;default:g=a.split("-")}return g}function v(a,d,g){var c=!1;switch(a){case "<":c=d<g?!0:!1;break;case "<=":c=d<=g?!0:!1;break;case ">":c=d>g?!0:!1;break;case ">=":c=d>=g?!0:!1;break;case "!=":case "<>":c=
d!=g?!0:!1;break;case "!==":c=d!==g?!0:!1;break;case "=":case "==":c=d==g?!0:!1;break;case "===":c=d===g?!0:!1;break;default:c=!1}return c}var r=[],n={resetGlobalOptionsOnRouteChange:!0},E=[],t=[];b.$on("$routeChangeStart",function(a,d,c){n.resetGlobalOptionsOnRouteChange&&(n={displayOnlyLastErrorMsg:!1,preValidateFormElements:!1,isolatedScope:null,scope:null,resetGlobalOptionsOnRouteChange:!0},r=[],t=[])});b=function(a,d,c,b){this.bFieldRequired=!1;this.validators=[];this.typingLimit=1E3;this.scope=
a;this.elm=d;this.ctrl=b;this.validatorAttrs=c;a&&a.$validationOptions&&(n=a.$validationOptions);a&&(n.isolatedScope||n.scope)&&(this.scope=n.isolatedScope||n.scope,n=e(a.$validationOptions,n));"undefined"===typeof n.resetGlobalOptionsOnRouteChange&&(n.resetGlobalOptionsOnRouteChange=!0);this.elm&&this.validatorAttrs&&this.ctrl&&this.scope&&(u(this.elm,this.validatorAttrs,this.ctrl,this.scope),this.defineValidation())};b.prototype.arrayFindObject=B;b.prototype.defineValidation=function(){var a={};
this.validators=[];this.typingLimit=1E3;this.validatorAttrs.hasOwnProperty("debounce")?this.typingLimit=parseInt(this.validatorAttrs.debounce,10):this.validatorAttrs.hasOwnProperty("typingLimit")?this.typingLimit=parseInt(this.validatorAttrs.typingLimit,10):n&&n.hasOwnProperty("debounce")&&(this.typingLimit=parseInt(n.debounce,10));var d=this.validatorAttrs.rules||this.validatorAttrs.validation;if(0<=d.indexOf("pattern=/")){var c=d.match(/pattern=(\/.*\/[igm]*)(:alt=(.*))?/);if(!c||3>c.length)throw'Regex validator within the validation needs to be define with an opening "/" and a closing "/", please review your validator.';
var b=c[1],a=c[2]?c[2].replace(/\|(.*)/,""):"",c=b.match(/^\/(.*?)\/([gimy]*)$/),c=new RegExp(c[1],c[2]),a={altMsg:a,message:a.replace(/:alt=/,""),pattern:c},d=d.replace("pattern="+b,"pattern")}else if(0<=d.indexOf("regex:")){c=d.match("regex:(.*?):regex");if(2>c.length)throw'Regex validator within the validation needs to be define with an opening "regex:" and a closing ":regex", please review your validator.';a=c[1].split(":=");a={message:a[0],pattern:a[1]};d=d.replace(c[0],"regex:")}if(b=d.split("|"))for(this.bFieldRequired=
0<=d.indexOf("required")?!0:!1,d=0,c=b.length;d<c;d++){var e=b[d].split(":"),h=0<=b[d].indexOf("alt=")?!0:!1;this.validators[d]=f.getElementValidators({altText:!0===h?2===e.length?e[1]:e[2]:"",customRegEx:a,rule:e[0],ruleParams:h&&2===e.length?null:e[1]})}return this};b.prototype.getFormElementByName=x;b.prototype.getFormElements=function(a){return a?w(r,"formName",a):r};b.prototype.getGlobalOptions=function(){return n};b.prototype.isFieldRequired=function(){return this.bFieldRequired};b.prototype.initialize=
function(a,d,c,b){this.scope=a;this.elm=d;this.ctrl=b;this.validatorAttrs=c;u(d,c,b,a);this.defineValidation()};b.prototype.mergeObjects=e;b.prototype.removeFromValidationSummary=function(c,b){var g=d(c,this),e=b||t,h=a(e,"field",c);0<=h&&e.splice(h,1);h=a(t,"field",c);0<=h&&t.splice(h,1);this.scope.$validationSummary=t;g&&(g.$validationSummary=w(t,"formName",g.$name));n&&n.controllerAs&&(n.controllerAs.$validationSummary=t,g&&(e=0<=g.$name.indexOf(".")?g.$name.split(".")[1]:g.$name,n.controllerAs[e]&&
(n.controllerAs[e].$validationSummary=w(t,"formName",g.$name))));return t};b.prototype.removeFromFormElementObjectList=function(d){d=a(r,"fieldName",d);0<=d&&r.splice(d,1)};b.prototype.setDisplayOnlyLastErrorMsg=function(a){n.displayOnlyLastErrorMsg=a};b.prototype.setGlobalOptions=function(a){n=e(n,a);return this};b.prototype.updateErrorMsg=q;b.prototype.validate=function(a,d){var b=this,e=!0,h=!0,f="",p,l;"undefined"===typeof a&&(a="");l=b.ctrl&&b.ctrl.$name?b.ctrl.$name:b.attrs&&b.attrs.name?b.attrs.name:
b.elm.attr("name");for(var r=x(l),q=b.validatorAttrs.rules||b.validatorAttrs.validation,t=0,w=b.validators.length;t<w;t++){l=b.validators[t];"autoDetect"===l.type&&(l=c(a)?{condition:l.conditionNum,message:l.messageNum,params:l.params,type:"conditionalNumber"}:{pattern:l.patternLength,message:l.messageLength,params:l.params,type:"regex"});if("conditionalDate"===l.type){if(p=e=!1,a instanceof Date?p=!0:(p=new RegExp(l.pattern),p=(!l.pattern||"/\\S+/"===l.pattern.toString()||q&&"required"===l.pattern)&&
null===a?!1:p.test(a)),p){var z=l.dateType;p=a instanceof Date?a:F(a,z).getTime();if(2==l.params.length){var C=F(l.params[0],z).getTime(),z=F(l.params[1],z).getTime(),C=v(l.condition[0],p,C);p=v(l.condition[1],p,z);e=C&&p?!0:!1}else C=F(l.params[0],z).getTime(),e=v(l.condition,p,C)}}else if("conditionalNumber"===l.type)2==l.params.length?(C=v(l.condition[0],parseFloat(a),parseFloat(l.params[0])),p=v(l.condition[1],parseFloat(a),parseFloat(l.params[1])),e=C&&p?!0:!1):e=v(l.condition,parseFloat(a),
parseFloat(l.params[0]));else if("matching"===l.type){p=l.params[0];var C=b.scope.$eval(p),z=angular.element(document.querySelector('[name="'+p+'"]')),u=l,B=b.ctrl,H=x(b.ctrl.$name),e=v(l.condition,a,C)&&!!a;z&&z.attr("friendly-name")?l.params[1]=z.attr("friendly-name"):1<l.params.length&&(l.params[1]=l.params[1]);b.scope.$watch(p,function(a,d){var c=v(u.condition,B.$viewValue,a);if(a!==d){if(c)A(b,H,"",!0,!0);else{H.isValid=!1;var e=u.message;u.altText&&0<u.altText.length&&(e=u.altText.replace("alt=",
""));y(e).then(function(a){f=" "+(u&&u.params?String.format(a,u.params):a);A(b,H,f,c,!0)})}B.$setValidity("validation",c)}},!0)}else if("remote"===l.type){if(a&&d){b.ctrl.$processing=!0;p=null;p=l.params[0];if(-1===p.indexOf("."))p=b.scope[p];else{C=p.split(".");p=b.scope;for(var z=0,J=C.length;z<J;z++)p=p[C[z]]}var G="function"===typeof p?p(a):null;if(1<E.length)for(;0<E.length;)p=E.pop(),"function"===typeof p.abort&&p.abort();E.push(G);if(G&&"function"===typeof G.then)b.ctrl.$setValidity("remote",
!1),function(a){G.then(function(c){c=c.data||c;E.pop();b.ctrl.$processing=!1;var k=f+" ";"boolean"===typeof c?e=c?!0:!1:"object"===typeof c&&(e=c.isValid?!0:!1);!1===e&&(r.isValid=!1,k+=c.message||a,A(b,r,k,!1,d));!0===e&&!0===h&&(r.isValid=!0,b.ctrl.$setValidity("remote",!0),A(b,r,"",!0,d))})}(l.altText);else throw"Remote Validation requires a declared function (in your Controller) which also needs to return a Promise, please review your code.";}}else{var I=b.attrs?b.attrs.ngDisabled:b.validatorAttrs.ngDisabled;
b.elm.prop("disabled")||b.scope.$eval(I)?e=!0:"string"===typeof a&&""===a&&"NUMBER"===b.elm.prop("type").toUpperCase()?e=!1:(p=new RegExp(l.pattern),e=(!l.pattern||"/\\S+/"===l.pattern.toString()||q&&"required"===l.pattern)&&null===a?!1:p.test(a))}if(!b.bFieldRequired&&!a||b.elm.prop("disabled")||b.scope.$eval(I))e=!0;e||(h=!1,function(a,c,e){var k=e.message;e.altText&&0<e.altText.length&&(k=e.altText.replace("alt=",""));y(k).then(function(c){f=0<f.length&&n.displayOnlyLastErrorMsg?" "+(e&&e.params?
String.format(c,e.params):c):f+(" "+(e&&e.params?String.format(c,e.params):c));A(b,a,f,h,d)})["catch"](function(c){e.altText&&0<e.altText.length&&(f=0<f.length&&n.displayOnlyLastErrorMsg?" "+k:f+(" "+k),A(b,a,f,h,d))})}(r,e,l))}e&&(D(b,""),b.updateErrorMsg("",{isValid:e}));r&&(r.isValid=h)&&(r.message="");return h};String.prototype.trim=function(){return this.replace(/^\s+|\s+$/g,"")};String.prototype.format=function(){var a=Array.isArray(arguments[0])?arguments[0]:arguments;return this.replace(/{(\d+)}/g,
function(c,d){return"undefined"!==typeof a[d]?a[d]:c})};String.format=function(a){var c=Array.isArray(arguments[1])?arguments[1]:Array.prototype.slice.call(arguments,1);return a.replace(/{(\d+)}/g,function(a,d){return"undefined"!==typeof c[d]?c[d]:a})};return b}]);angular.module("ghiscoding.validation").factory("validationRules",[function(){return{getElementValidators:function(b){var y="undefined"!==typeof b.altText?b.altText.replace("alt=",""):null,f=b.hasOwnProperty("customRegEx")?b.customRegEx:null,x=b.hasOwnProperty("rule")?b.rule:null;b=b.hasOwnProperty("ruleParams")?b.ruleParams:null;var e={};switch(x){case "accepted":e={pattern:/^(yes|on|1|true)$/i,message:"INVALID_ACCEPTED",type:"regex"};break;case "alpha":e={pattern:/^([a-z\u0430-\u044f\u00e0\u00e1\u00e2\u00e3\u00e4\u00e5\u00e6\u00e7\u00e8\u00e9\u00ea\u00eb\u0153\u00ec\u00ed\u00ef\u00ee\u00f0\u00f2\u00f3\u00f4\u00f5\u00f6\u00f8\u00f9\u00fa\u00fb\u00f1\u00fc\u00fd\u00ff\u00df\u00de\u010f\u0111])+$/i,
message:"INVALID_ALPHA",type:"regex"};break;case "alphaSpaces":case "alpha_spaces":e={pattern:/^([a-z\u0430-\u044f\u00e0\u00e1\u00e2\u00e3\u00e4\u00e5\u00e6\u00e7\u00e8\u00e9\u00ea\u00eb\u0153\u00ec\u00ed\u00ef\u00ee\u00f0\u00f2\u00f3\u00f4\u00f5\u00f6\u00f8\u00f9\u00fa\u00fb\u00f1\u00fc\u00fd\u00ff\u00df\u00de\u010f\u0111\s])+$/i,message:"INVALID_ALPHA_SPACE",type:"regex"};break;case "alphaNum":case "alpha_num":e={pattern:/^([a-z\u0430-\u044f\u00e0\u00e1\u00e2\u00e3\u00e4\u00e5\u00e6\u00e7\u00e8\u00e9\u00ea\u00eb\u0153\u00ec\u00ed\u00ef\u00ee\u00f0\u00f2\u00f3\u00f4\u00f5\u00f6\u00f8\u00f9\u00fa\u00fb\u00f1\u00fc\u00fd\u00ff\u00df\u00de\u010f\u01110-9])+$/i,
message:"INVALID_ALPHA_NUM",type:"regex"};break;case "alphaNumSpaces":case "alpha_num_spaces":e={pattern:/^([a-z\u0430-\u044f\u00e0\u00e1\u00e2\u00e3\u00e4\u00e5\u00e6\u00e7\u00e8\u00e9\u00ea\u00eb\u0153\u00ec\u00ed\u00ef\u00ee\u00f0\u00f2\u00f3\u00f4\u00f5\u00f6\u00f8\u00f9\u00fa\u00fb\u00f1\u00fc\u00fd\u00ff\u00df\u00de\u010f\u01110-9\s])+$/i,message:"INVALID_ALPHA_NUM_SPACE",type:"regex"};break;case "alphaDash":case "alpha_dash":e={pattern:/^([a-z\u0430-\u044f\u00e0\u00e1\u00e2\u00e3\u00e4\u00e5\u00e6\u00e7\u00e8\u00e9\u00ea\u00eb\u0153\u00ec\u00ed\u00ef\u00ee\u00f0\u00f2\u00f3\u00f4\u00f5\u00f6\u00f8\u00f9\u00fa\u00fb\u00f1\u00fc\u00fd\u00ff\u00df\u00de\u010f\u01110-9_-])+$/i,
message:"INVALID_ALPHA_DASH",type:"regex"};break;case "alphaDashSpaces":case "alpha_dash_spaces":e={pattern:/^([a-z\u0430-\u044f\u00e0\u00e1\u00e2\u00e3\u00e4\u00e5\u00e6\u00e7\u00e8\u00e9\u00ea\u00eb\u0153\u00ec\u00ed\u00ef\u00ee\u00f0\u00f2\u00f3\u00f4\u00f5\u00f6\u00f8\u00f9\u00fa\u00fb\u00f1\u00fc\u00fd\u00ff\u00df\u00de\u010f\u01110-9\s_-])+$/i,message:"INVALID_ALPHA_DASH_SPACE",type:"regex"};break;case "between":f=b.split(",");if(2!==f.length)throw"This validation must include exactly 2 params separated by a comma (,) ex.: between:1,5";
e={patternLength:"^(.|[\\r\\n]){"+f[0]+","+f[1]+"}$",messageLength:"INVALID_BETWEEN_CHAR",conditionNum:[">=","<="],messageNum:"INVALID_BETWEEN_NUM",params:[f[0],f[1]],type:"autoDetect"};break;case "betweenLen":case "between_len":f=b.split(",");if(2!==f.length)throw"This validation must include exactly 2 params separated by a comma (,) ex.: between_len:1,5";e={pattern:"^(.|[\\r\\n]){"+f[0]+","+f[1]+"}$",message:"INVALID_BETWEEN_CHAR",params:[f[0],f[1]],type:"regex"};break;case "betweenNum":case "between_num":f=
b.split(",");if(2!==f.length)throw"This validation must include exactly 2 params separated by a comma (,) ex.: between_num:1,5";e={condition:[">=","<="],message:"INVALID_BETWEEN_NUM",params:[f[0],f[1]],type:"conditionalNumber"};break;case "boolean":e={pattern:/^(true|false|0|1)$/i,message:"INVALID_BOOLEAN",type:"regex"};break;case "checked":e={pattern:/^true$/i,message:"INVALID_CHECKBOX_SELECTED",type:"regex"};break;case "creditCard":case "credit_card":e={pattern:/^(?:4[0-9]{12}(?:[0-9]{3})?|5[1-5][0-9]{14}|3[47][0-9]{13}|3(?:0[0-5]|[68][0-9])[0-9]{11}|6(?:011|5[0-9]{2})[0-9]{12}|(?:2131|1800|35\d{3})\d{11})$/,
message:"INVALID_CREDIT_CARD",type:"regex"};break;case "dateEuroLong":case "date_euro_long":e={pattern:/^(0[1-9]|[12][0-9]|3[01])[-\/\.](0[1-9]|1[012])[-\/\.](19|20)\d\d$/,message:"INVALID_DATE_EURO_LONG",type:"regex"};break;case "dateEuroLongBetween":case "date_euro_long_between":case "betweenDateEuroLong":case "between_date_euro_long":f=b.split(",");if(2!==f.length)throw"This validation must include exactly 2 params separated by a comma (,) ex.: between_date_euro_long:01-01-1990,31-12-2015";e={condition:[">=",
"<="],dateType:"EURO_LONG",params:[f[0],f[1]],pattern:/^(0[1-9]|[12][0-9]|3[01])[-\/\.](0[1-9]|1[012])[-\/\.](19|20)\d\d$/,message:"INVALID_DATE_EURO_LONG_BETWEEN",type:"conditionalDate"};break;case "dateEuroLongMax":case "date_euro_long_max":case "maxDateEuroLong":case "max_date_euro_long":e={condition:"<=",dateType:"EURO_LONG",params:[b],pattern:/^(0[1-9]|[12][0-9]|3[01])[-\/\.](0[1-9]|1[012])[-\/\.](19|20)\d\d$/,message:"INVALID_DATE_EURO_LONG_MAX",type:"conditionalDate"};break;case "dateEuroLongMin":case "date_euro_long_min":case "minDateEuroLong":case "min_date_euro_long":e=
{condition:">=",dateType:"EURO_LONG",params:[b],pattern:/^(0[1-9]|[12][0-9]|3[01])[-\/\.](0[1-9]|1[012])[-\/\.](19|20)\d\d$/,message:"INVALID_DATE_EURO_LONG_MIN",type:"conditionalDate"};break;case "dateEuroShort":case "date_euro_short":e={pattern:/^(0[1-9]|[12][0-9]|3[01])[-\/\.](0[1-9]|1[012])[-\/\.]\d\d$/,message:"INVALID_DATE_EURO_SHORT",type:"regex"};break;case "dateEuroShortBetween":case "date_euro_short_between":case "betweenDateEuroShort":case "between_date_euro_short":f=b.split(",");if(2!==
f.length)throw"This validation must include exactly 2 params separated by a comma (,) ex.: between_date_euro_short:01-01-90,31-12-15";e={condition:[">=","<="],dateType:"EURO_SHORT",params:[f[0],f[1]],pattern:/^(0[1-9]|[12][0-9]|3[01])[-\/\.](0[1-9]|1[012])[-\/\.]\d\d$/,message:"INVALID_DATE_EURO_SHORT_BETWEEN",type:"conditionalDate"};break;case "dateEuroShortMax":case "date_euro_short_max":case "maxDateEuroShort":case "max_date_euro_short":e={condition:"<=",dateType:"EURO_SHORT",params:[b],pattern:/^(0[1-9]|[12][0-9]|3[01])[-\/\.](0[1-9]|1[012])[-\/\.]\d\d$/,
message:"INVALID_DATE_EURO_SHORT_MAX",type:"conditionalDate"};break;case "dateEuroShortMin":case "date_euro_short_min":case "minDateEuroShort":case "min_date_euro_short":e={condition:">=",dateType:"EURO_SHORT",params:[b],pattern:/^(0[1-9]|[12][0-9]|3[01])[-\/\.](0[1-9]|1[012])[-\/\.]\d\d$/,message:"INVALID_DATE_EURO_SHORT_MIN",type:"conditionalDate"};break;case "dateIso":case "date_iso":e={pattern:/^(19|20)\d\d([-])(0[1-9]|1[012])\2(0[1-9]|[12][0-9]|3[01])$/,message:"INVALID_DATE_ISO",type:"regex"};
break;case "dateIsoBetween":case "date_iso_between":case "betweenDateIso":case "between_date_iso":f=b.split(",");if(2!==f.length)throw"This validation must include exactly 2 params separated by a comma (,) ex.: between_date_iso:1990-01-01,2000-12-31";e={condition:[">=","<="],dateType:"ISO",params:[f[0],f[1]],pattern:/^(19|20)\d\d([-])(0[1-9]|1[012])\2(0[1-9]|[12][0-9]|3[01])$/,message:"INVALID_DATE_ISO_BETWEEN",type:"conditionalDate"};break;case "dateIsoMax":case "date_iso_max":case "maxDateIso":case "max_date_iso":e=
{condition:"<=",dateType:"ISO",params:[b],pattern:/^(19|20)\d\d([-])(0[1-9]|1[012])\2(0[1-9]|[12][0-9]|3[01])$/,message:"INVALID_DATE_ISO_MAX",type:"conditionalDate"};break;case "dateIsoMin":case "date_iso_min":case "minDateIso":case "min_date_iso":e={condition:">=",dateType:"ISO",params:[b],pattern:/^(19|20)\d\d([-])(0[1-9]|1[012])\2(0[1-9]|[12][0-9]|3[01])$/,message:"INVALID_DATE_ISO_MIN",type:"conditionalDate"};break;case "dateUsLong":case "date_us_long":e={pattern:/^(0[1-9]|1[012])[-\/\.](0[1-9]|[12][0-9]|3[01])[-\/\.](19|20)\d\d$/,
message:"INVALID_DATE_US_LONG",type:"regex"};break;case "dateUsLongBetween":case "date_us_long_between":case "betweenDateUsLong":case "between_date_us_long":f=b.split(",");if(2!==f.length)throw"This validation must include exactly 2 params separated by a comma (,) ex.: between_date_us_long:01/01/1990,12/31/2015";e={condition:[">=","<="],dateType:"US_LONG",params:[f[0],f[1]],pattern:/^(0[1-9]|1[012])[-\/\.](0[1-9]|[12][0-9]|3[01])[-\/\.](19|20)\d\d$/,message:"INVALID_DATE_US_LONG_BETWEEN",type:"conditionalDate"};
break;case "dateUsLongMax":case "date_us_long_max":case "maxDateUsLong":case "max_date_us_long":e={condition:"<=",dateType:"US_LONG",params:[b],pattern:/^(0[1-9]|1[012])[-\/\.](0[1-9]|[12][0-9]|3[01])[-\/\.](19|20)\d\d$/,message:"INVALID_DATE_US_LONG_MAX",type:"conditionalDate"};break;case "dateUsLongMin":case "date_us_long_min":case "minDateUsLong":case "min_date_us_long":e={condition:">=",dateType:"US_LONG",params:[b],pattern:/^(0[1-9]|1[012])[-\/\.](0[1-9]|[12][0-9]|3[01])[-\/\.](19|20)\d\d$/,
message:"INVALID_DATE_US_LONG_MIN",type:"conditionalDate"};break;case "dateUsShort":case "date_us_short":e={pattern:/^(0[1-9]|1[012])[-\/\.](0[1-9]|[12][0-9]|3[01])[-\/\.]\d\d$/,message:"INVALID_DATE_US_SHORT",type:"regex"};break;case "dateUsShortBetween":case "date_us_short_between":case "betweenDateUsShort":case "between_date_us_short":f=b.split(",");if(2!==f.length)throw"This validation must include exactly 2 params separated by a comma (,) ex.: between_date_us_short:01/01/90,12/31/15";e={condition:[">=",
"<="],dateType:"US_SHORT",params:[f[0],f[1]],pattern:/^(0[1-9]|1[012])[-\/\.](0[1-9]|[12][0-9]|3[01])[-\/\.]\d\d$/,message:"INVALID_DATE_US_SHORT_BETWEEN",type:"conditionalDate"};break;case "dateUsShortMax":case "date_us_short_max":case "maxDateUsShort":case "max_date_us_short":e={condition:"<=",dateType:"US_SHORT",params:[b],pattern:/^(0[1-9]|1[012])[-\/\.](0[1-9]|[12][0-9]|3[01])[-\/\.]\d\d$/,message:"INVALID_DATE_US_SHORT_MAX",type:"conditionalDate"};break;case "dateUsShortMin":case "date_us_short_min":case "minDateUsShort":case "min_date_us_short":e=
{condition:">=",dateType:"US_SHORT",params:[b],pattern:/^(0[1-9]|1[012])[-\/\.](0[1-9]|[12][0-9]|3[01])[-\/\.]\d\d$/,message:"INVALID_DATE_US_SHORT_MIN",type:"conditionalDate"};break;case "different":case "differentInput":case "different_input":b=b.split(",");e={condition:"!=",message:"INVALID_INPUT_DIFFERENT",params:b,type:"matching"};break;case "digits":e={pattern:"^\\d{"+b+"}$",message:"INVALID_DIGITS",params:[b],type:"regex"};break;case "digitsBetween":case "digits_between":f=b.split(",");if(2!==
f.length)throw"This validation must include exactly 2 params separated by a comma (,) ex.: digits_between:1,5";e={pattern:"^\\d{"+f[0]+","+f[1]+"}$",message:"INVALID_DIGITS_BETWEEN",params:[f[0],f[1]],type:"regex"};break;case "email":e={pattern:/^[-\w\u0430-\u044f\u00e0\u00e1\u00e2\u00e3\u00e4\u00e5\u00e6\u00e7\u00e8\u00e9\u00ea\u00eb\u0153\u00ec\u00ed\u00ef\u00ee\u00f0\u00f2\u00f3\u00f4\u00f5\u00f6\u00f8\u00f9\u00fa\u00fb\u00f1\u00fc\u00fd\u00ff\u00df\u00de\u010f\u01110-9#~!$%^&*_=+\/`\|}{\'?]+(\.[-\w\u0430-\u044f\u00e0\u00e1\u00e2\u00e3\u00e4\u00e5\u00e6\u00e7\u00e8\u00e9\u00ea\u00eb\u0153\u00ec\u00ed\u00ef\u00ee\u00f0\u00f2\u00f3\u00f4\u00f5\u00f6\u00f8\u00f9\u00fa\u00fb\u00f1\u00fc\u00fd\u00ff\u00df\u00de\u010f\u01110-9#~!$%^&*_=+\/`\|}{\'?]+)*@([\w\u0430-\u044f\u00e0\u00e1\u00e2\u00e3\u00e4\u00e5\u00e6\u00e7\u00e8\u00e9\u00ea\u00eb\u0153\u00ec\u00ed\u00ef\u00ee\u00f0\u00f2\u00f3\u00f4\u00f5\u00f6\u00f8\u00f9\u00fa\u00fb\u00f1\u00fc\u00fd\u00ff\u00df\u00de\u010f\u01110-9_][-\w\u0430-\u044f\u00e0\u00e1\u00e2\u00e3\u00e4\u00e5\u00e6\u00e7\u00e8\u00e9\u00ea\u00eb\u0153\u00ec\u00ed\u00ef\u00ee\u00f0\u00f2\u00f3\u00f4\u00f5\u00f6\u00f8\u00f9\u00fa\u00fb\u00f1\u00fc\u00fd\u00ff\u00df\u00de\u010f\u01110-9_]*(\.[-\w\u0430-\u044f\u00e0\u00e1\u00e2\u00e3\u00e4\u00e5\u00e6\u00e7\u00e8\u00e9\u00ea\u00eb\u0153\u00ec\u00ed\u00ef\u00ee\u00f0\u00f2\u00f3\u00f4\u00f5\u00f6\u00f8\u00f9\u00fa\u00fb\u00f1\u00fc\u00fd\u00ff\u00df\u00de\u010f\u01110-9_]+)*([\w\u0430-\u044f\u00e0\u00e1\u00e2\u00e3\u00e4\u00e5\u00e6\u00e7\u00e8\u00e9\u00ea\u00eb\u0153\u00ec\u00ed\u00ef\u00ee\u00f0\u00f2\u00f3\u00f4\u00f5\u00f6\u00f8\u00f9\u00fa\u00fb\u00f1\u00fc\u00fd\u00ff\u00df\u00de\u010f\u0111]+)|(\.[\w\u0430-\u044f\u00e0\u00e1\u00e2\u00e3\u00e4\u00e5\u00e6\u00e7\u00e8\u00e9\u00ea\u00eb\u0153\u00ec\u00ed\u00ef\u00ee\u00f0\u00f2\u00f3\u00f4\u00f5\u00f6\u00f8\u00f9\u00fa\u00fb\u00f1\u00fc\u00fd\u00ff\u00df\u00de\u010f\u0111]{2,6})|([0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}))(:[0-9]{1,5})?$/i,
message:"INVALID_EMAIL",type:"regex"};break;case "exactLen":case "exact_len":e={pattern:"^(.|[\\r\\n]){"+b+"}$",message:"INVALID_EXACT_LEN",params:[b],type:"regex"};break;case "float":e={pattern:/^\d*\.{1}\d+$/,message:"INVALID_FLOAT",type:"regex"};break;case "floatSigned":case "float_signed":e={pattern:/^[-+]?\d*\.{1}\d+$/,message:"INVALID_FLOAT_SIGNED",type:"regex"};break;case "iban":e={pattern:/^[a-zA-Z]{2}\d{2}\s?([0-9a-zA-Z]{4}\s?){4}[0-9a-zA-Z]{2}$/i,message:"INVALID_IBAN",type:"regex"};break;
case "in":case "inList":case "in_list":f=b.replace(/,/g,"|");e={pattern:"^(\\b("+f+")\\b)$",message:"INVALID_IN_LIST",params:[b],type:"regex"};break;case "int":case "integer":e={pattern:/^\d+$/,message:"INVALID_INTEGER",type:"regex"};break;case "intSigned":case "integerSigned":case "int_signed":case "integer_signed":e={pattern:/^[+-]?\d+$/,message:"INVALID_INTEGER_SIGNED",type:"regex"};break;case "ip":case "ipv4":e={pattern:/^(25[0-5]|2[0-4]\d|[0-1]?\d?\d)(\.(25[0-5]|2[0-4]\d|[0-1]?\d?\d)){3}$/,message:"INVALID_IPV4",
type:"regex"};break;case "ipv6":e={pattern:/^(?:[0-9a-fA-F]{1,4}:){7}[0-9a-fA-F]{1,4}$/i,message:"INVALID_IPV6",type:"regex"};break;case "match":case "matchInput":case "match_input":case "same":b=b.split(",");e={condition:"===",message:"INVALID_INPUT_MATCH",params:b,type:"matching"};break;case "max":e={patternLength:"^(.|[\\r\\n]){0,"+b+"}$",messageLength:"INVALID_MAX_CHAR",conditionNum:"<=",messageNum:"INVALID_MAX_NUM",params:[b],type:"autoDetect"};break;case "maxLen":case "max_len":e={pattern:"^(.|[\\r\\n]){0,"+
b+"}$",message:"INVALID_MAX_CHAR",params:[b],type:"regex"};break;case "maxNum":case "max_num":e={condition:"<=",message:"INVALID_MAX_NUM",params:[b],type:"conditionalNumber"};break;case "min":e={patternLength:"^(.|[\\r\\n]){"+b+",}$",messageLength:"INVALID_MIN_CHAR",conditionNum:">=",messageNum:"INVALID_MIN_NUM",params:[b],type:"autoDetect"};break;case "minLen":case "min_len":e={pattern:"^(.|[\\r\\n]){"+b+",}$",message:"INVALID_MIN_CHAR",params:[b],type:"regex"};break;case "minNum":case "min_num":e=
{condition:">=",message:"INVALID_MIN_NUM",params:[b],type:"conditionalNumber"};break;case "notIn":case "not_in":case "notInList":case "not_in_list":f=b.replace(/,/g,"|");e={pattern:"^((?!\\b("+f+")\\b).)+$",message:"INVALID_NOT_IN_LIST",params:[b],type:"regex"};break;case "numeric":e={pattern:/^\d*\.?\d+$/,message:"INVALID_NUMERIC",type:"regex"};break;case "numericSigned":case "numeric_signed":e={pattern:/^[-+]?\d*\.?\d+$/,message:"INVALID_NUMERIC_SIGNED",type:"regex"};break;case "pattern":case "regex":e=
{pattern:f.pattern,message:"INVALID_PATTERN",params:[f.message],type:"regex"};break;case "remote":e={message:"",params:[b],type:"remote"};break;case "required":e={pattern:/\S+/,message:"INVALID_REQUIRED",type:"regex"};break;case "size":e={patternLength:"^(.|[\\r\\n]){"+b+"}$",messageLength:"INVALID_EXACT_LEN",conditionNum:"==",messageNum:"INVALID_EXACT_NUM",params:[b],type:"autoDetect"};break;case "url":e={pattern:/^(http|ftp|https):\/\/[\w\-_]+(\.[\w\-_]+)+([\w\-\.,@?^=%&amp;:\/~\+#]*[\w\-\@?^=%&amp;\/~\+#])?/i,
message:"INVALID_URL",type:"regex"};break;case "time":e={pattern:/^([01]?[0-9]|2[0-3]):[0-5][0-9](:[0-5][0-9])?$/,message:"INVALID_TIME",type:"regex"}}e.altText=y;return e}}}]);angular.module("ghiscoding.validation").service("validationService",["$interpolate","$timeout","validationCommon",function(b,y,f){function x(a,d){var c;if("undefined"===typeof a||"undefined"===typeof a.$validationSummary)throw"removeValidator() only works with Validation that were defined by the Service (not by the Directive) and requires a valid Angular Form or $scope/vm object passed as argument to work properly, for example:: fn($scope) OR fn($scope.form1) OR fn(vm) OR fn(vm.form1)";if(d instanceof
Array)for(var b=0,e=d.length;b<e;b++)c=this.commonObj.getFormElementByName(d[b]),c.elm.removeAttr("validation"),u(this,c,a.$validationSummary);else d instanceof Object&&d.formElmObj?(c=d.formElmObj,c.elm.removeAttr("validation"),u(d.self,c,a.$validationSummary)):(c=this.commonObj.getFormElementByName(d),c.elm.removeAttr("validation"),u(this,c,a.$validationSummary));return this}function e(a,d,c){c="undefined"!==typeof c?c:a.commonObj.typingLimit;var b=a.commonObj.getFormElementByName(a.commonObj.ctrl.$name);
a.commonObj.validate(d,!1);if(a.commonObj.isFieldRequired()||""!==d&&null!==d&&"undefined"!==typeof d)b.isValidationCancelled=!1;else return q(a,b),d;(a.commonObj.isFieldRequired()||d)&&a.commonObj.ctrl.$setValidity("validation",!1);if((""===d||"undefined"===typeof d)&&"NUMBER"===a.commonObj.elm.prop("type").toUpperCase())return y.cancel(a.timer),a.commonObj.ctrl.$setValidity("validation",a.commonObj.validate(d,!0)),d;if("SELECT"===a.commonObj.elm.prop("tagName").toUpperCase())return a.commonObj.ctrl.$setValidity("validation",
a.commonObj.validate(d,!0)),d;"undefined"!==typeof d&&(a.commonObj.updateErrorMsg(""),y.cancel(a.timer),a.timer=y(function(){a.commonObj.scope.$evalAsync(a.commonObj.ctrl.$setValidity("validation",a.commonObj.validate(d,!0)))},c));return d}function q(a,d){var c=d&&d.ctrl?d.ctrl:a.commonObj.ctrl;d&&(d.isValidationCancelled=!0);y.cancel(self.timer);c.$setValidity("validation",!0);a.commonObj.updateErrorMsg("",{isValid:!0,obj:d});"function"===typeof D&&(d&&d.elm?d.elm:a.commonObj.elm).unbind("blur",
D)}function u(a,d,c){var b=a.commonObj.scope?a.commonObj.scope:d.scope?d.scope:null;if("undefined"===typeof b)throw"removeValidator() requires a valid $scope object passed but unfortunately could not find it.";var e=a.commonObj.arrayFindObject(B,"elmName",d.fieldName);e&&e.watcherHandler();d.isValidationCancelled=!0;d.isValid=!0;d.attrs.validation="";q(a,d);"function"===typeof d.ctrl.$setUntouched&&d.ctrl.$setUntouched();a.commonObj.scope=b;d.ctrl.$setPristine();a.commonObj.removeFromValidationSummary(d.fieldName,
c)}function A(a,d,c){d.$watch(function(){return"undefined"===typeof c.elm.attr("ng-disabled")?null:d.$eval(c.elm.attr("ng-disabled"))},function(b){if("undefined"===typeof b||null===b)return null;c.ctrl=angular.element(c.elm).controller("ngModel");a.commonObj.initialize(d,c.elm,c,c.ctrl);var h=a.commonObj.getFormElementByName(c.name);y(function(){if(b)c.ctrl.$setValidity("validation",!0),a.commonObj.updateErrorMsg("",{isValid:!0,obj:h}),a.commonObj.removeFromValidationSummary(c.name);else{var f=c.ctrl.$viewValue||
"";a.commonObj.initialize(d,c.elm,c,c.ctrl);c.ctrl.$setValidity("validation",a.commonObj.validate(f,!1));h&&(h.isValidationCancelled=!1);c.elm.bind("blur",D=function(c){h&&!h.isValidationCancelled&&e(a,c.target.value,10)})}},0,!1);b&&("function"===typeof c.ctrl.$setUntouched&&c.ctrl.$setUntouched(),c.ctrl.$setValidity("validation",!0),a.commonObj.removeFromValidationSummary(c.name))})}var D,B=[],w=function(a){this.isValidationCancelled=!1;this.timer=null;this.validationAttrs={};this.commonObj=new f;
a&&this.setGlobalOptions(a)};w.prototype.addValidator=function(a,d,c){var f=this,h={};"string"===typeof a&&"string"===typeof d?(h.elmName=a,h.rules=d,h.friendlyName="string"===typeof c?c:""):h=a;if("object"!==typeof h||!h.hasOwnProperty("elmName")||!h.hasOwnProperty("rules")||!h.hasOwnProperty("scope")&&"undefined"===typeof f.validationAttrs.scope)throw"Angular-Validation-Service requires at least the following 3 attributes: {elmName, rules, scope}";var v=h.scope?h.scope:f.validationAttrs.scope;h.elm=
angular.element(document.querySelector('[name="'+h.elmName+'"]'));if("object"!==typeof h.elm||0===h.elm.length)return f;/{{(.*?)}}/.test(h.elmName)&&(h.elmName=b(h.elmName)(v));h.name=h.elmName;f.validationAttrs.isolatedScope&&(a=v.$validationOptions||null,v=f.validationAttrs.isolatedScope,a&&(v.$validationOptions=a));h.elm.bind("blur",D=function(a){var c=f.commonObj.getFormElementByName(h.elmName);c&&!c.isValidationCancelled&&(f.commonObj.initialize(v,h.elm,h,h.ctrl),e(f,a.target.value,10))});h=
f.commonObj.mergeObjects(f.validationAttrs,h);A(f,v,h);h.elm.on("$destroy",function(){var a=f.commonObj.getFormElementByName(f.commonObj.ctrl.$name);a&&(q(f,a),f.commonObj.removeFromValidationSummary(h.name))});a=v.$watch(h.elmName,function(a,c){void 0===a&&void 0!==c?(y.cancel(f.timer),f.commonObj.ctrl.$setValidity("validation",f.commonObj.validate("",!0))):(h.ctrl=angular.element(h.elm).controller("ngModel"),h.value=a,f.commonObj.initialize(v,h.elm,h,h.ctrl),e(f,a))},!0);B.push({elmName:h.elmName,
watcherHandler:a});return f};w.prototype.checkFormValidity=function(a){var d="",c=!0;if("undefined"===typeof a||"undefined"===typeof a.$validationSummary)throw"checkFormValidity() requires a valid Angular Form or $scope/vm object passed as argument to work properly, for example:: fn($scope) OR fn($scope.form1) OR fn(vm) OR fn(vm.form1)";for(var b=0,e=a.$validationSummary.length;b<e;b++)c=!1,(d=a.$validationSummary[b].field)&&(d=this.commonObj.getFormElementByName(d))&&d.elm&&0<d.elm.length&&("function"===
typeof d.ctrl.$setTouched&&d.ctrl.$setTouched(),this.commonObj.updateErrorMsg(a.$validationSummary[b].message,{isSubmitted:!0,isValid:d.isValid,obj:d}));return c};w.prototype.removeValidator=x;w.prototype.resetForm=function(a,b){var c;b=b||{};var e="undefined"!==typeof b.removeAllValidators?b.removeAllValidators:!1,f="undefined"!==typeof b.emptyAllInputValues?b.emptyAllInputValues:!1;if("undefined"===typeof a||"undefined"===typeof a.$name)throw"resetForm() requires a valid Angular Form object passed as argument to work properly (ex.: $scope.form1).";
var q=this.commonObj.getFormElements(a.$name);if(q instanceof Array)for(var r=0,n=q.length;r<n;r++)c=q[r],f&&c.elm.val(null),e?x(a,{self:this,formElmObj:c}):("function"===typeof c.ctrl.$setUntouched&&c.ctrl.$setUntouched(),c.ctrl.$setPristine(),this.commonObj.updateErrorMsg("",{isValid:!1,obj:c}))};w.prototype.setDisplayOnlyLastErrorMsg=function(a){this.commonObj.setDisplayOnlyLastErrorMsg("boolean"===typeof a?a:!0)};w.prototype.setGlobalOptions=function(a){this.validationAttrs=a;this.commonObj.setGlobalOptions(a);
return this};w.prototype.clearInvalidValidatorsInSummary=function(a){if("undefined"===typeof a||"undefined"===typeof a.$validationSummary)throw"clearInvalidValidatorsInSummary() requires a valid Angular Form or $scope/vm object passed as argument to work properly, for example:: fn($scope) OR fn($scope.form1) OR fn(vm) OR fn(vm.form1)";for(var b=[],c=0,e=a.$validationSummary.length;c<e;c++)b.push(a.$validationSummary[c].field);c=0;for(e=b.length;c<e;c++)b[c]&&(this.commonObj.removeFromFormElementObjectList(b[c]),
this.commonObj.removeFromValidationSummary(b[c],a.$validationSummary))};return w}]);
