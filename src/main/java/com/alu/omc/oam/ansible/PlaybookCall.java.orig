package com.alu.omc.oam.ansible;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import com.alu.omc.oam.ansible.exception.WorkspaceException;
import com.alu.omc.oam.config.Action;
import com.alu.omc.oam.config.COMConfig;

public class PlaybookCall implements AnsibleCall
{
    /**
     * @Fields playbook : the file name of playbook
     */
    private Playbook            playbook;

    private static Logger       log             = LoggerFactory
                                                        .getLogger(PlaybookCall.class);
    private COMConfig           config;
    private static final String ANSIBLE_COMMAND = "ansible-playbook ";

    public PlaybookCall(COMConfig config, Action action)
    {
<<<<<<< HEAD
        this.playbook = PlaybookFactory.getInstance().getPlaybook(action,
                config);
        this.config  = config;
=======
    	log.info("Write var file to working directory...");
        FileUtils.writeStringToFile(new File(space.getWorkingdir().concat(VAR_FILE_NAME)), this.vars);
        log.info("Write host file to working directory...");
        FileUtils.writeStringToFile(new File(space.getWorkingdir().concat(HOSTS_FILE_NAME)), this.inventory.toInf()); 
        log.info("Copy ansible codes to working directory...");
        FileUtils.copyDirectory(new File(space.getWorkDirRoot() + "code"), new File(space.getWorkingdir()));
        log.info("Write empty log file");
        FileUtils.write(space.getLogFile(), "-------Call ansible......");
        log.info("Write ansible configuration file to working directory...");
        FileUtils.writeStringToFile(new File(space.getWorkingdir() + "ansible.cfg"), 
        		cfg.concat("\r\n").concat("log_path=" + space.getLogFile()));
>>>>>>> 94522cd50db767d481181177b6ce241119a204ab
    }

    public String prepare(Ansibleworkspace space)
    {
        try
        {
            space.init(config);
        }
        catch (WorkspaceException e)
        {
            e.printStackTrace();
            return null;
        }
        return ANSIBLE_COMMAND.concat("-i ").concat(
                space.getWorkingdir() + Ansibleworkspace.HOSTS_FILE_NAME + " "
                        + this.playbook.getFilePath(space));
    }

}
